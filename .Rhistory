install.packages("haven") # Archivos .dta
install.packages("haven") # Archivos .dta
install.packages("plm")
install.packages("skimr")
install.packages("skimr")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("skimr")
install.packages("skimr")
# Leer archivo .dta
data <- read_dta("oil_windfall_sin10perc.dta")
library(haven)
library(haven)
library(plm)
library(haven)
library(plm)
library(scales)
library(skimr)
library(haven)
library(plm)
library(scales)
library(skimr)
library(dplyr)
library(ggplot2)
# Leer archivo .dta
data <- read_dta("oil_windfall_sin10perc.dta")
getwd()
list.files()
file.exists("oil_windfall_sin10perc.dta")
# Leer archivo .dta
data <- read_dta("oil_windfall_sin10perc.dta")
# Leer archivo .dta
data <- read_dta("oil_windfall_sin10perc.dta")
View(data)
set.seed(201613424)
# Cargar liberias y paquetes
install.packages("haven") # Archivos .dta
install.packages("plm")
install.packages("skimr")
install.packages("dplyr")
install.packages("ggplot2")
library(haven)
library(plm)
library(scales)
library(skimr)
library(dplyr)
library(ggplot2)
# Leer archivo .dta
data <- read_dta("oil_windfall_sin10perc.dta")
set.seed(201613424)
install.packages("skimr")
<<<<<<< HEAD
# Cargar liberias y paquetes
install.packages("haven") # Archivos .dta
install.packages("plm")
install.packages("skimr")
install.packages("dplyr")
install.packages("skimr")
install.packages("ggplot2")
library(haven)
library(plm)
library(scales)
library(skimr)
library(dplyr)
library(ggplot2)
# Leer archivo .dta
data <- read_dta("oil_windfall_sin10perc.dta")
set.seed(201613424)
View(data)
data2 <- data %>%
mutate(coastal_offshore = ifelse(coastal == 1 & onshore == 0, 1, 0))
View(data2)
m_edu <- ivreg(exp_educ_cult_pc_2000 ~ rev_oil_pc_2000 |
price_x_potential,
data = data2,
subset = (coastal_offshore == 1))
library(AER)
data2 <- data %>%
mutate(coastal_offshore = ifelse(coastal == 1 & onshore == 0, 1, 0))
m_edu <- ivreg(exp_educ_cult_pc_2000 ~ rev_oil_pc_2000 |
price_x_potential,
data = data2,
subset = (coastal_offshore == 1))
data$drop_flag <- sample(c(0,1), size = nrow(datos), replace = TRUE, prob = c(0.9,0.1))
# Eliminar aleatoriamente el 10% de la base
data$drop_flag <- sample(c(0,1), size = nrow(data), replace = TRUE, prob = c(0.9,0.1))
data2.1 <- subset(datos, drop_flag == 0)
# Eliminar aleatoriamente el 10% de la base
data$drop_flag <- sample(c(0,1), size = nrow(data), replace = TRUE, prob = c(0.9,0.1))
data2.1 <- subset(data, drop_flag == 0)
View(data2.1)
# Eliminar aleatoriamente el 10% de la base
set.seed(202312345)  # tu código de estudiante
# Número exacto de filas a eliminar (10% de la base)
n_drop <- round(0.1 * nrow(data))
# Escoger aleatoriamente los índices a eliminar
drop_index <- sample(1:nrow(data), size = n_drop)
# Crear la submuestra eliminando esos índices
data_sub <- data[-drop_index, ]
View(data_sub)
# Cargar liberias y paquetes
install.packages("haven") # Archivos .dta
install.packages("plm")
install.packages("skimr")
install.packages("dplyr")
install.packages("ggplot2")
library(haven)
library(plm)
library(scales)
library(skimr)
library(dplyr)
library(ggplot2)
library(AER)         # ivreg
# Leer archivo .dta
data <- read_dta("oil_windfall_sin10perc.dta")
set.seed(201613424)
install.packages("ggplot2")
install.packages("skimr")
install.packages("dplyr")
install.packages("plm")
install.packages("haven")
# Eliminar aleatoriamente el 10% de la base
# Número exacto de filas a eliminar (10% de la base)
n_drop <- round(0.1 * nrow(data))
# Escoger aleatoriamente los índices a eliminar
drop_index <- sample(1:nrow(data), size = n_drop)
# Crear la submuestra eliminando esos índices
data_sub <- data[-drop_index, ]
# Eliminar aleatoriamente el 10% de la base
=======
rmarkdown::render("Taller_2_LauraRivera_CamilaCaraballo.Rmd")
library(AER)
library(fixest)
library(lmtest)
library(sandwich)
library(tidyverse)
library(stargazer)
# Leer archivo .dta
data <- read_dta("oil_windfall_sin10perc.dta")
set.seed(201613424)
>>>>>>> d49c78a9141dcf3c113919f0d79136d83cfcc9ec
# Número exacto de filas a eliminar (10% de la base)
eliminar <- round(0.1 * nrow(data))
# Escoger aleatoriamente los índices a eliminar
drop_index <- sample(1:nrow(data), size = eliminar)
# Crear la submuestra eliminando esos índices
<<<<<<< HEAD
data2 <- data[-drop_index, ]
View(data2)
# Solo municipios costeros que reciben petroleo
data2 <- subset(data2, coastal == 1 & onshore == 0)
View(data2)
string(data2)
str(data2)
str(data2)
# Definir variables
endogena <- "oilandgasvalue2000_cap"
instrumento <- "mun_budget_revenue2000_pred_c"
y_var <- c("pmun_exp_funct_educ_cult2000c",
"pmun_exp_funct_health_sanit2000c",
"pmun_exp_funct_transport2000c",
"pmun_exp_funct_welf2000c")
# Regresión Educación y Cultura
iv_educ <- ivreg(pmun_exp_funct_educ_cult2000c ~ mun_budget_revenue2000_pred_c |
oilandgasvalue2000_cap,
data = data2)
# Regresión Salud y Sanitización
iv_salud <- ivreg(pmun_exp_funct_health_sanit2000c ~ mun_budget_revenue2000_pred_c |
oilandgasvalue2000_cap,
data = data2)
# Regresión Transporte
iv_transp <- ivreg(pmun_exp_funct_transport2000c ~ mun_budget_revenue2000_pred_c |
oilandgasvalue2000_cap,
data = data2)
# Regresión Transferencias sociales
iv_welfare <- ivreg(pmun_exp_funct_welf2000c ~ mun_budget_revenue2000_pred_c |
oilandgasvalue2000_cap,
data = data2)
stargazer(iv_educ, iv_salud, iv_transp, iv_welfare,
type = "text",
keep = c("mun_budget_revenue2000_pred_c"),   # muestra solo el coef. de interés
omit.stat = c("f","ser"),   # omitir estadísticos poco relevantes
dep.var.labels = ("Gasto público municipal (2000)"),
covariate.labels = c("Ingresos municipales (IV)"),
column.labels = c("Educación y Cultura", "Salud y Sanitización",
"Transporte", "Transferencias Sociales"),
add.lines = list(
c("Muestra", "Costeros offshore", "Costeros offshore", "Costeros offshore", "Costeros offshore"),
c("Instrumento", "Petróleo/gas pc", "Petróleo/gas pc", "Petróleo/gas pc", "Petróleo/gas pc")
),
star.cutoffs = c(0.1, 0.05, 0.01),
notes = "Errores estándar robustos entre paréntesis. *** p<0.01, ** p<0.05, * p<0.1",
notes.align = "l")
library(stargazer)
# Regresión Educación y Cultura
iv_educ <- ivreg(pmun_exp_funct_educ_cult2000c ~ mun_budget_revenue2000_pred_c |
oilandgasvalue2000_cap,
data = data2)
# Regresión Salud y Sanitización
iv_salud <- ivreg(pmun_exp_funct_health_sanit2000c ~ mun_budget_revenue2000_pred_c |
oilandgasvalue2000_cap,
data = data2)
# Regresión Transporte
iv_transp <- ivreg(pmun_exp_funct_transport2000c ~ mun_budget_revenue2000_pred_c |
oilandgasvalue2000_cap,
data = data2)
# Regresión Transferencias sociales
iv_welfare <- ivreg(pmun_exp_funct_welf2000c ~ mun_budget_revenue2000_pred_c |
oilandgasvalue2000_cap,
data = data2)
stargazer(iv_educ, iv_salud, iv_transp, iv_welfare,
type = "text",
keep = c("mun_budget_revenue2000_pred_c"),   # muestra solo el coef. de interés
omit.stat = c("f","ser"),   # omitir estadísticos poco relevantes
dep.var.labels = ("Gasto público municipal (2000)"),
covariate.labels = c("Ingresos municipales (IV)"),
column.labels = c("Educación y Cultura", "Salud y Sanitización",
"Transporte", "Transferencias Sociales"),
add.lines = list(
c("Muestra", "Costeros offshore", "Costeros offshore", "Costeros offshore", "Costeros offshore"),
c("Instrumento", "Petróleo/gas pc", "Petróleo/gas pc", "Petróleo/gas pc", "Petróleo/gas pc")
),
star.cutoffs = c(0.1, 0.05, 0.01),
notes = "Errores estándar robustos entre paréntesis. *** p<0.01, ** p<0.05, * p<0.1",
notes.align = "l")
# Primera etapa
primera_etapa <- lm(mun_budget_revenue2000_pred_c ~ oilandgasvalue2000_cap, data = data2)
summary(primera_etapa)
# 2. Extraer el t del coeficiente del instrumento
t_stat <- summary(primera_etapa)$coefficients["oilandgasvalue2000_cap", "t value"]
# 3. Calcular F como t^2
F_stat <- t_stat^2
F_stat
# Personas que no viven en favelas en 2000
iv_favelas <- ivreg(p_hhld_abovestrandard_ppl_2000 ~ 1 | oilandgasvalue2000_cap,
data = data2)
# Número de salones por millón de habitantes en el 2005.
iv_salones <- ivreg(clroomsMunicipal_pop2005 ~ 1 | oilandgasvalue2000_cap,
data = data2)
# Tabla
stargazer(iv_favelas, iv_salones,
type = "text",
dep.var.labels = c("% población fuera de favelas (2000)",
"Salones por millón de habitantes (2005)"),
covariate.labels = c("Petróleo/gas per cápita"),
column.labels = c("Bienestar 1", "Bienestar 2"),
star.cutoffs = c(0.1, 0.05, 0.01),
notes = "Errores estándar robustos entre paréntesis. *** p<0.01, ** p<0.05, * p<0.1",
notes.align = "l")
# Personas que no viven en favelas en 2000
iv_favelas <- ivreg(p_hhld_abovestrandard_ppl_2000 ~ 1 | oilandgasvalue2000_cap,
data = data2)
# Número de salones por millón de habitantes en el 2005.
iv_salones <- ivreg(clroomsMunicipal_pop2005 ~ 1 | oilandgasvalue2000_cap,
data = data2)
# Tabla
stargazer(iv_favelas, iv_salones,
type = "text",
dep.var.labels = c("% población fuera de favelas (2000)",
"Salones por millón de habitantes (2005)"),
covariate.labels = c("Petróleo/gas per cápita"),
column.labels = c("Bienestar 1", "Bienestar 2"),
star.cutoffs = c(0.1, 0.05, 0.01),
notes = "Errores estándar robustos entre paréntesis. *** p<0.01, ** p<0.05, * p<0.1",
notes.align = "l")
sum(is.na(data2$mun_budget_revenue2000_pred_c))
sum(is.na(data2$p_hhld_abovestrandard_ppl_2000))
sum(is.na(data2$oilandgasvalue2000_cap))
# Submuestra sin NA
data3 <- na.omit(data2[, c("p_hhld_abovestrandard_ppl_2000",
"clroomsMunicipal_pop2005",
"mun_budget_revenue2000_pred_c",
# Submuestra sin NA
data3 <- na.omit(data2[, c("p_hhld_abovestrandard_ppl_2000",
"clroomsMunicipal_pop2005",
"mun_budget_revenue2000_pred_c",
"oilandgasvalue2000_cap")])
# Revisar que se eliminaron los NA
sum(is.na(data3$mun_budget_revenue2000_pred_c)) # debe dar 0
# Submuestra sin NA
data3 <- na.omit(data2[, c("p_hhld_abovestrandard_ppl_2000",
"clroomsMunicipal_pop2005",
"mun_budget_revenue2000_pred_c",
"oilandgasvalue2000_cap")])
# Revisar que se eliminaron los NA
sum(is.na(data3$mun_budget_revenue2000_pred_c))
# Personas que no viven en favelas en 2000
iv_favelas <- ivreg(p_hhld_abovestrandard_ppl_2000 ~ 1 | oilandgasvalue2000_cap,
data = data3)
# Número de salones por millón de habitantes en el 2005.
iv_salones <- ivreg(clroomsMunicipal_pop2005 ~ 1 | oilandgasvalue2000_cap,
data = data3)
# Tabla
stargazer(iv_favelas, iv_salones,
type = "text",
dep.var.labels = c("% población fuera de favelas (2000)",
"Salones por millón de habitantes (2005)"),
covariate.labels = c("Petróleo/gas per cápita"),
column.labels = c("Bienestar 1", "Bienestar 2"),
star.cutoffs = c(0.1, 0.05, 0.01),
notes = "Errores estándar robustos entre paréntesis. *** p<0.01, ** p<0.05, * p<0.1",
notes.align = "l")
# Submuestra sin NA
data3 <- na.omit(data2[, c("p_hhld_abovestrandard_ppl_2000",
"clroomsMunicipal_pop2005",
"mun_budget_revenue2000_pred_c",
"oilandgasvalue2000_cap")])
# Revisar que se eliminaron los NA
sum(is.na(data3$mun_budget_revenue2000_pred_c))
# Personas que no viven en favelas en 2000
iv_favelas <- ivreg(p_hhld_abovestrandard_ppl_2000 ~ 1 | oilandgasvalue2000_cap,
data = data3)
# Número de salones por millón de habitantes en el 2005.
iv_salones <- ivreg(clroomsMunicipal_pop2005 ~ 1 | oilandgasvalue2000_cap,
data = data3)
# Tabla
stargazer(iv_favelas, iv_salones,
type = "text",
dep.var.labels = c("% población fuera de favelas (2000)",
"Salones por millón de habitantes (2005)"),
covariate.labels = c("Petróleo/gas per cápita"),
column.labels = c("Bienestar 1", "Bienestar 2"),
star.cutoffs = c(0.1, 0.05, 0.01),
notes = "Errores estándar robustos entre paréntesis. *** p<0.01, ** p<0.05, * p<0.1",
notes.align = "l")
# Submuestra sin NA
data3 <- na.omit(data2[, c("p_hhld_abovestrandard_ppl_2000",
"clroomsMunicipal_pop2005",
"mun_budget_revenue2000_pred_c",
"oilandgasvalue2000_cap")])
# Revisar que se eliminaron los NA
sum(is.na(data3$mun_budget_revenue2000_pred_c))
# Personas que no viven en favelas en 2000
favelas <- lm(p_hhld_abovestrandard_ppl_2000 ~ oilandgasvalue2000_cap, data = data3)
# Número de salones por millón de habitantes en el 2005.
salones <- lm(clroomsMunicipal_pop2005 ~ oilandgasvalue2000_cap, data = data3)
stargazer(favelas, salones,
type = "text",
dep.var.labels = c("% población fuera de favelas (2000)",
"Salones por millón de habitantes (2005)"),
covariate.labels = c("Ingresos municipales (IV)"),
column.labels = c("Bienestar 1", "Bienestar 2"),
star.cutoffs = c(0.1, 0.05, 0.01),
notes = "Errores estándar robustos entre paréntesis. *** p<0.01, ** p<0.05, * p<0.1",
notes.align = "l")
# Regresión Educación y Cultura
iv_educ <- ivreg(pmun_exp_funct_educ_cult2000c ~ mun_budget_revenue2000_pred_c |
oilandgasvalue2000_cap,
data = data2)
# Regresión Salud y Sanitización
iv_salud <- ivreg(pmun_exp_funct_health_sanit2000c ~ mun_budget_revenue2000_pred_c |
oilandgasvalue2000_cap,
data = data2)
# Regresión Transporte
iv_transp <- ivreg(pmun_exp_funct_transport2000c ~ mun_budget_revenue2000_pred_c |
oilandgasvalue2000_cap,
data = data2)
# Regresión Transferencias sociales
iv_welfare <- ivreg(pmun_exp_funct_welf2000c ~ mun_budget_revenue2000_pred_c |
oilandgasvalue2000_cap,
data = data2)
stargazer(iv_educ, iv_salud, iv_transp, iv_welfare,
type = "text",
keep = c("mun_budget_revenue2000_pred_c"),
omit.stat = c("f","ser"),
dep.var.labels = ("Gasto público municipal (2000)"),
covariate.labels = c("Ingresos municipales (IV)"),
column.labels = c("Educación y Cultura", "Salud y Sanitización",
"Transporte", "Transferencias Sociales"),
add.lines = list(
c("Muestra", "Costeros offshore", "Costeros offshore", "Costeros offshore", "Costeros offshore"),
c("Instrumento", "Petróleo/gas pc", "Petróleo/gas pc", "Petróleo/gas pc", "Petróleo/gas pc")
),
star.cutoffs = c(0.1, 0.05, 0.01),
notes = "Errores estándar robustos entre paréntesis. *** p<0.01, ** p<0.05, * p<0.1",
notes.align = "l")
=======
data_final <- data[-drop_index, ]
# Solo municipios costeros que reciben petroleo
data_final <- subset(data_final, coastal == 1 & onshore == 0)
#Transformación de variables
data_final <- data_final %>%
rename(
revenue     = mun_budget_revenue2000_pred_c,
oil_pc      = oilandgasvalue2000_cap,
lat         = latitude1998,
lon         = longitude1998,
coast       = coastal,
dist_fedcap = dist_federal_capital1998,
dist_statecap = dist_state_capital1998,
state_cap   = state_capital,
state    = sigla
)
# Cambiar a tipo factor
data_final <- data_final %>% mutate(state = as.factor(state))
# Primera etapa con FE de estado
prim_et <- lm(
revenue ~ oil_pc + lat + lon + coast + dist_fedcap + dist_statecap + state_cap + factor(state),
data = data_final
)
vc <- vcovCL(primer, cluster = ~ state, type = "HC1")
#Resultados por cluster
vc <- vcovCL(prim_et, cluster = ~ state, type = "HC1")
ct <- coeftest(prim_et, vcov = vc)
# Solo coeficientes a reportar y sus SE
vars_keep <- c("oil_pc","lat","lon","coast","dist_fedcap","dist_statecap","state_cap")
idx <- match(vars_keep, rownames(ct))
betas <- ct[idx, "Estimate"]
ses   <- ct[idx, "Std. Error"]
#Tabulación de los resultados
stargazer(
primer,
type = "text",
coef = list(betas),
se   = list(ses),
keep = paste0("^(", paste(vars_keep, collapse="|"), ")$"),
dep.var.labels   = "Ingresos municipales",
covariate.labels = c("Producción de petróleo","Latitud","Longitud",
"Dummy costa","Dist. capital federal","Dist. capital estatal","Dummy capital estatal"),
omit             = "factor\\(state_id\\)|\\(Intercept\\)",
star.cutoffs     = c(.10,.05,.01),
digits           = 3,
title            = "Primera etapa: ingresos municipales sobre producción petrolera y controles"
)
#Tabulación de los resultados
stargazer(
prim_et,
type = "text",
coef = list(betas),
se   = list(ses),
keep = paste0("^(", paste(vars_keep, collapse="|"), ")$"),
dep.var.labels   = "Ingresos municipales",
covariate.labels = c("Producción de petróleo","Latitud","Longitud",
"Dummy costa","Dist. capital federal","Dist. capital estatal","Dummy capital estatal"),
omit             = "factor\\(state_id\\)|\\(Intercept\\)",
star.cutoffs     = c(.10,.05,.01),
digits           = 3,
title            = "Primera etapa: ingresos municipales sobre producción petrolera y controles"
)
View(data_final)
names(data_final)
sapply(data_final, function(x) attr(x, "label"))
data_final <- data_final %>%
rename(
amc_code        = new_code_1970_1997,
per_ho_elec     = prc_hhld_with_power_2000,
salon_pob_2005  = clroomsMunicipal_pop2005,
clinic_pob_2002 = estab_mun2002_without_pop,
km_pob_2005     = km_paved_munic_c,
ex_edu_cult        = pmun_exp_funct_educ_cult2000c,
ex_salud_sani      = pmun_exp_funct_health_sanit2000c,
ex_desarrollo_urb  = pmun_exp_funct_hous_urban2000c,
ex_transp          = pmun_exp_funct_transport2000c,
ex_soc_transf      = pmun_exp_funct_welf2000c,
perc_nofavelas     = p_hhld_abovestrandard_ppl_2000
)
names(data_final)
#Agrupación de variables de interés
outcomes <- c(
"ex_edu_cult",
"ex_salud_sani",
"ex_desarrollo_urb",
"ex_transp", "
ex_soc_transf"
)
#Agrupación de controles
controls <- ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap
etable(
fml = list(
ex_edu_cult       ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state | (revenue ~ oil_pc),
ex_salud_sani     ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state | (revenue ~ oil_pc),
ex_desarrollo_urb ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state | (revenue ~ oil_pc),
ex_transp         ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state | (revenue ~ oil_pc),
ex_soc_transf     ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state | (revenue ~ oil_pc)
),
data    = df,
cluster = ~ state,        # errores agrupados por estado
se      = "cluster",
dict    = c(
"revenue" = "Ingresos (IV)",
"oil_pc"  = "Petróleo pc (instrumento)",
"lat" = "Latitud", "lon" = "Longitud", "coast" = "Costa",
"dist_fedcap" = "Dist. capital federal", "dist_statecap" = "Dist. capital estatal",
"state_cap" = "Capital estatal"
),
title   = "Segunda etapa (IV): ingresos municipales instrumentados y gastos por función"
)
etable(
fml = list(
ex_edu_cult       ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state | (revenue ~ oil_pc),
ex_salud_sani     ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state | (revenue ~ oil_pc),
ex_desarrollo_urb ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state | (revenue ~ oil_pc),
ex_transp         ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state | (revenue ~ oil_pc),
ex_soc_transf     ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state | (revenue ~ oil_pc)
),
data    = data_final,
cluster = ~ state,        # errores agrupados por estado
se      = "cluster",
dict    = c(
"revenue" = "Ingresos (IV)",
"oil_pc"  = "Petróleo pc (instrumento)",
"lat" = "Latitud", "lon" = "Longitud", "coast" = "Costa",
"dist_fedcap" = "Dist. capital federal", "dist_statecap" = "Dist. capital estatal",
"state_cap" = "Capital estatal"
),
title   = "Segunda etapa (IV): ingresos municipales instrumentados y gastos por función"
)
seg_et <- feols(
fml = list(
ex_edu_cult       ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state,
ex_salud_sani     ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state,
ex_desarrollo_urb ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state,
ex_transp         ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state,
ex_soc_transf     ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state
),
data    = df,
iv      = ~ revenue ~ oil_pc,  # instrumenta 'revenue' con 'oil_pc'
cluster = ~ state              # errores agrupados por estado
)
seg_et <- feols(
fml = list(
ex_edu_cult       ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state,
ex_salud_sani     ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state,
ex_desarrollo_urb ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state,
ex_transp         ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state,
ex_soc_transf     ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state
),
data    = data_final,
iv      = ~ revenue ~ oil_pc,  # instrumenta 'revenue' con 'oil_pc'
cluster = ~ state              # errores agrupados por estado
)
seg_et <- feols(
fml = list(
ex_edu_cult       ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state,
ex_salud_sani     ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state,
ex_desarrollo_urb ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state,
ex_transp         ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state,
ex_soc_transf     ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state
),
data    = data_final,
iv      = ~ revenue ~ oil_pc,  # instrumenta 'revenue' con 'oil_pc'
cluster = ~ state              # errores agrupados por estado
)
library(fixest)
library(lmtest)
library(sandwich)
library(stargazer)
seg_et <- feols(
fml = list(
ex_edu_cult       ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state,
ex_salud_sani     ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state,
ex_desarrollo_urb ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state,
ex_transp         ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state,
ex_soc_transf     ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state
),
data    = data_final,
iv      = ~ revenue ~ oil_pc,  # instrumenta 'revenue' con 'oil_pc'
cluster = ~ state              # errores agrupados por estado
)
data_final$state <- as.factor(data_final$state)
# Segunda etapa IV — modelos individuales
m_edu <- feols(
ex_edu_cult ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state | (revenue ~ oil_pc),
data = data_final, cluster = ~ state
)
stopifnot(all(c(
"ex_edu_cult","ex_salud_sani","ex_desarrollo_urb","ex_transp","ex_soc_transf",
"revenue","oil_pc","lat","lon","coast","dist_fedcap","dist_statecap","state_cap","state"
) %in% names(data_final)))
num_vars <- c("revenue","oil_pc","lat","lon","coast","dist_fedcap","dist_statecap","state_cap",
"ex_edu_cult","ex_salud_sani","ex_desarrollo_urb","ex_transp","ex_soc_transf")
data_final <- data_final %>%
mutate(across(all_of(num_vars), ~ suppressWarnings(as.numeric(.)))) %>%
mutate(state = as.factor(state))
# Segunda etapa IV — modelos individuales
m_edu <- feols(
ex_edu_cult ~ lat + lon + coast + dist_fedcap + dist_statecap + state_cap | state | (revenue ~ oil_pc),
data = data_final, cluster = ~ state
)
m_edu_iv   <- ivreg(ex_edu_cult       ~ revenue + lat + lon + coast + dist_fedcap + dist_statecap + state_cap + factor(state) |
oil_pc + lat + lon + coast + dist_fedcap + dist_statecap + state_cap + factor(state), data = df)
m_edu_iv <- ivreg(ex_edu_cult ~ revenue + lat + lon + coast + dist_fedcap + dist_statecap + state_cap + factor(state) | oil_pc + lat + lon + coast + dist_fedcap + dist_statecap + state_cap + factor(state), data = data_final)
m_salud_iv <- ivreg(ex_salud_sani ~ revenue + lat + lon + coast + dist_fedcap + dist_statecap + state_cap + factor(state) |oil_pc + lat + lon + coast + dist_fedcap + dist_statecap + state_cap + factor(state), data = data_final)
m_urb_iv  <- ivreg(ex_desarrollo_urb ~ revenue + lat + lon + coast + dist_fedcap + dist_statecap + state_cap + factor(state) |oil_pc + lat + lon + coast + dist_fedcap + dist_statecap + state_cap + factor(state), data = data_final)
m_trans_iv <- ivreg(ex_transp ~ revenue + lat + lon + coast + dist_fedcap + dist_statecap + state_cap + factor(state) |oil_pc + lat + lon + coast + dist_fedcap + dist_statecap + state_cap + factor(state), data = data_final)
m_soc_iv   <- ivreg(ex_soc_transf     ~ revenue + lat + lon + coast + dist_fedcap + dist_statecap + state_cap + factor(state) |oil_pc + lat + lon + coast + dist_fedcap + dist_statecap + state_cap + factor(state), data = data_final)
#Errores agrupados por Estado
vc <- function(m) sandwich::vcovCL(m, cluster = ~ state, type = "HC1")
ses <- lapply(list(m_edu_iv,m_salud_iv,m_urb_iv,m_trans_iv,m_soc_iv), function(m) sqrt(diag(vc(m))))
ses <- lapply(list(m_edu_iv,m_salud_iv,m_urb_iv,m_trans_iv,m_soc_iv), function(m) sqrt(diag(vc(m))))
#Presentación de resultados en tabla
stargazer(
m_edu_iv,m_salud_iv,m_trans_iv,m_soc_iv,
type = "text", se = ses,
dep.var.labels = c("Gasto Educación/Cultura","Gasto Salud/Saneamiento","Gasto Transporte","Gasto Asistencia Social/Transferencias"),
covariate.labels = c("Ingresos (IV)","Latitud","Longitud","Costa","Dist. capital federal","Dist. capital estatal","Capital estatal"),
omit = "factor\\(state\\)|\\(Intercept\\)", omit.labels = "Dummies de estado",
star.cutoffs = c(.10,.05,.01), digits = 3,
title = "Segunda etapa (IV): ingresos instrumentados y gastos por función",
notes = "Errores estándar robustos agrupados por estado entre paréntesis."
)
names(data_final)
sapply(data_final, label)
library(Hmisc)
sapply(data_final, function(x) attr(x, "label"))
# Eliminar NA
data_reducido <- na.omit(data_final[, c("perc_nofavelas",
"salon_pob_2005",
"revenue",
"oil_pc")])
# Revisar que se eliminaron los NA
sum(is.na(data_reducido$revenue))
# Personas que no viven en favelas en 2000
m_nofav <- lm(perc_nofavelas ~ oil_pc + lat + lon + coast + dist_fedcap + dist_statecap + state_cap + factor(state_id), data = data_reducido)
View(data_reducido)
rm(data_reducido)
# Personas que no viven en favelas en 2000
m_nofav <- lm(perc_nofavelas ~ oil_pc + lat + lon + coast + dist_fedcap + dist_statecap + state_cap + factor(state_id), data = data_final)
# Personas que no viven en favelas en 2000
m_nofav <- lm(perc_nofavelas ~ oil_pc + lat + lon + coast + dist_fedcap + dist_statecap + state_cap + factor(state), data = data_final)
# Número de salones por millón de habitantes en el 2005.
m_classrooms <- lm(salon_pob_2005 ~ oil_pc + lat + lon + coast + dist_fedcap + dist_statecap + state_cap + factor(state), data = data_final)
# Errores estándar robustos agrupados por estado
se_nofav      <- sqrt(diag(vcovCL(m_nofav, cluster = ~ state_id, type = "HC1")))
se_classrooms <- sqrt(diag(vcovCL(m_classrooms, cluster = ~ state_id, type = "HC1")))
# Errores estándar robustos agrupados por estado
se_nofav      <- sqrt(diag(vcovCL(m_nofav, cluster = ~ state, type = "HC1")))
se_classrooms <- sqrt(diag(vcovCL(m_classrooms, cluster = ~ state, type = "HC1")))
library(lmtest)
library(sandwich)
# Errores estándar robustos agrupados por estado
se_nofav      <- sqrt(diag(vcovCL(m_nofav, cluster = ~ state, type = "HC1")))
se_classrooms <- sqrt(diag(vcovCL(m_classrooms, cluster = ~ state, type = "HC1")))
#Tabulación forma reducida
stargazer(
m_nofav, m_classrooms,
type             = "text",
se               = list(se_nofav, se_classrooms),
dep.var.labels   = c("No-favelas", "Salones por millón de habitantes"),
covariate.labels = c("Producción de petróleo per cápita (instrumento)"),
keep             = "^oil_pc$",
omit             = "factor\\(state_id\\)|lat|lon|coast|dist_fedcap|dist_statecap|state_cap|Intercept",
omit.labels      = "Controles y efectos fijos",
star.cutoffs     = c(.10,.05,.01),
digits           = 3,
title            = "Forma reducida: efecto del petróleo sobre indicadores de bienestar",
notes            = "Errores estándar robustos agrupados por estado entre paréntesis. Modelos incluyen controles geográficos y efectos fijos de estado.",
notes.align      = "l"
)
library(stargazer)
#Tabulación forma reducida
stargazer(
m_nofav, m_classrooms,
type             = "text",
se               = list(se_nofav, se_classrooms),
dep.var.labels   = c("No-favelas", "Salones por millón de habitantes"),
covariate.labels = c("Producción de petróleo per cápita (instrumento)"),
keep             = "^oil_pc$",
omit             = "factor\\(state_id\\)|lat|lon|coast|dist_fedcap|dist_statecap|state_cap|Intercept",
omit.labels      = "Controles y efectos fijos",
star.cutoffs     = c(.10,.05,.01),
digits           = 3,
title            = "Forma reducida: efecto del petróleo sobre indicadores de bienestar",
notes            = "Errores estándar robustos agrupados por estado entre paréntesis. Modelos incluyen controles geográficos y efectos fijos de estado.",
notes.align      = "l"
)
#Tabulación forma reducida
stargazer(
m_nofav, m_classrooms,
type             = "html",
se               = list(se_nofav, se_classrooms),
dep.var.labels   = c("No-favelas", "Salones por millón de habitantes"),
covariate.labels = c("Producción de petróleo per cápita (instrumento)"),
keep             = "^oil_pc$",
omit             = "factor\\(state_id\\)|lat|lon|coast|dist_fedcap|dist_statecap|state_cap|Intercept",
omit.labels      = "Controles y efectos fijos",
star.cutoffs     = c(.10,.05,.01),
digits           = 3,
title            = "Forma reducida: efecto del petróleo sobre indicadores de bienestar",
notes            = "Errores estándar robustos agrupados por estado entre paréntesis. Modelos incluyen controles geográficos y efectos fijos de estado.",
notes.align      = "l"
)
>>>>>>> d49c78a9141dcf3c113919f0d79136d83cfcc9ec
